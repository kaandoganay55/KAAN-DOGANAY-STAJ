"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./services/api.ts":
/*!*************************!*\
  !*** ./services/api.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getProducts: function() { return /* binding */ getProducts; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/../node_modules/next/dist/build/polyfills/process.js\");\nconst getProducts = async (filters)=>{\n    try {\n        const baseUrl = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3001\";\n        let url = \"\".concat(baseUrl, \"/api/products\");\n        if (filters) {\n            const params = new URLSearchParams();\n            if (filters.minPrice !== undefined) params.append(\"minPrice\", filters.minPrice.toString());\n            if (filters.maxPrice !== undefined) params.append(\"maxPrice\", filters.maxPrice.toString());\n            if (filters.minRating !== undefined) params.append(\"minRating\", filters.minRating.toString());\n            if (params.toString()) {\n                url += \"?\".concat(params.toString());\n            }\n        }\n        const response = await fetch(url);\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch products\");\n        }\n        return response.json();\n    } catch (error) {\n        console.error(\"Error fetching products:\", error);\n        return [];\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NlcnZpY2VzL2FwaS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQVFPLE1BQU1BLGNBQWMsT0FBT0M7SUFDaEMsSUFBSTtRQUNGLE1BQU1DLFVBQVVDLE9BQU9BLENBQUNDLEdBQUcsQ0FBQ0MsbUJBQW1CLElBQUk7UUFDbkQsSUFBSUMsTUFBTSxHQUFXLE9BQVJKLFNBQVE7UUFFckIsSUFBSUQsU0FBUztZQUNYLE1BQU1NLFNBQVMsSUFBSUM7WUFDbkIsSUFBSVAsUUFBUVEsUUFBUSxLQUFLQyxXQUFXSCxPQUFPSSxNQUFNLENBQUMsWUFBWVYsUUFBUVEsUUFBUSxDQUFDRyxRQUFRO1lBQ3ZGLElBQUlYLFFBQVFZLFFBQVEsS0FBS0gsV0FBV0gsT0FBT0ksTUFBTSxDQUFDLFlBQVlWLFFBQVFZLFFBQVEsQ0FBQ0QsUUFBUTtZQUN2RixJQUFJWCxRQUFRYSxTQUFTLEtBQUtKLFdBQVdILE9BQU9JLE1BQU0sQ0FBQyxhQUFhVixRQUFRYSxTQUFTLENBQUNGLFFBQVE7WUFFMUYsSUFBSUwsT0FBT0ssUUFBUSxJQUFJO2dCQUNyQk4sT0FBTyxJQUFzQixPQUFsQkMsT0FBT0ssUUFBUTtZQUM1QjtRQUNGO1FBRUEsTUFBTUcsV0FBVyxNQUFNQyxNQUFNVjtRQUM3QixJQUFJLENBQUNTLFNBQVNFLEVBQUUsRUFBRTtZQUNoQixNQUFNLElBQUlDLE1BQU07UUFDbEI7UUFDQSxPQUFPSCxTQUFTSSxJQUFJO0lBQ3RCLEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsNEJBQTRCQTtRQUMxQyxPQUFPLEVBQUU7SUFDWDtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc2VydmljZXMvYXBpLnRzPzRiZTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvZHVjdCB9IGZyb20gJy4uL3R5cGVzJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmlsdGVyUGFyYW1zIHtcclxuICBtaW5QcmljZT86IG51bWJlcjtcclxuICBtYXhQcmljZT86IG51bWJlcjtcclxuICBtaW5SYXRpbmc/OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRQcm9kdWN0cyA9IGFzeW5jIChmaWx0ZXJzPzogRmlsdGVyUGFyYW1zKTogUHJvbWlzZTxQcm9kdWN0W10+ID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgYmFzZVVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9VUkwgfHwgJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMSc7XHJcbiAgICBsZXQgdXJsID0gYCR7YmFzZVVybH0vYXBpL3Byb2R1Y3RzYDtcclxuICAgIFxyXG4gICAgaWYgKGZpbHRlcnMpIHtcclxuICAgICAgY29uc3QgcGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcygpO1xyXG4gICAgICBpZiAoZmlsdGVycy5taW5QcmljZSAhPT0gdW5kZWZpbmVkKSBwYXJhbXMuYXBwZW5kKCdtaW5QcmljZScsIGZpbHRlcnMubWluUHJpY2UudG9TdHJpbmcoKSk7XHJcbiAgICAgIGlmIChmaWx0ZXJzLm1heFByaWNlICE9PSB1bmRlZmluZWQpIHBhcmFtcy5hcHBlbmQoJ21heFByaWNlJywgZmlsdGVycy5tYXhQcmljZS50b1N0cmluZygpKTtcclxuICAgICAgaWYgKGZpbHRlcnMubWluUmF0aW5nICE9PSB1bmRlZmluZWQpIHBhcmFtcy5hcHBlbmQoJ21pblJhdGluZycsIGZpbHRlcnMubWluUmF0aW5nLnRvU3RyaW5nKCkpO1xyXG4gICAgICBcclxuICAgICAgaWYgKHBhcmFtcy50b1N0cmluZygpKSB7XHJcbiAgICAgICAgdXJsICs9IGA/JHtwYXJhbXMudG9TdHJpbmcoKX1gO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsKTtcclxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggcHJvZHVjdHMnKTtcclxuICAgIH1cclxuICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHByb2R1Y3RzOicsIGVycm9yKTtcclxuICAgIHJldHVybiBbXTtcclxuICB9XHJcbn07ICJdLCJuYW1lcyI6WyJnZXRQcm9kdWN0cyIsImZpbHRlcnMiLCJiYXNlVXJsIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0FQSV9VUkwiLCJ1cmwiLCJwYXJhbXMiLCJVUkxTZWFyY2hQYXJhbXMiLCJtaW5QcmljZSIsInVuZGVmaW5lZCIsImFwcGVuZCIsInRvU3RyaW5nIiwibWF4UHJpY2UiLCJtaW5SYXRpbmciLCJyZXNwb25zZSIsImZldGNoIiwib2siLCJFcnJvciIsImpzb24iLCJlcnJvciIsImNvbnNvbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./services/api.ts\n"));

/***/ })

});